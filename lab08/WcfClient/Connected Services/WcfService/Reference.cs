//------------------------------------------------------------------------------
// <auto-generated>
//     Ten kod został wygenerowany przez narzędzie.
//     Wersja wykonawcza:4.0.30319.42000
//
//     Zmiany w tym pliku mogą spowodować nieprawidłowe zachowanie i zostaną utracone, jeśli
//     kod zostanie ponownie wygenerowany.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WcfClient.WcfService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="User", Namespace="http://schemas.datacontract.org/2004/07/WcfService")]
    [System.SerializableAttribute()]
    public partial class User : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AgeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Age {
            get {
                return this.AgeField;
            }
            set {
                if ((this.AgeField.Equals(value) != true)) {
                    this.AgeField = value;
                    this.RaisePropertyChanged("Age");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="WcfService.IDatabaseService")]
    public interface IDatabaseService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseService/GetAllUsers", ReplyAction="http://tempuri.org/IDatabaseService/GetAllUsersResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ArrayList))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(WcfClient.WcfService.User))]
        System.Collections.ArrayList GetAllUsers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseService/GetAllUsers", ReplyAction="http://tempuri.org/IDatabaseService/GetAllUsersResponse")]
        System.Threading.Tasks.Task<System.Collections.ArrayList> GetAllUsersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseService/GetUserDatabaseSize", ReplyAction="http://tempuri.org/IDatabaseService/GetUserDatabaseSizeResponse")]
        int GetUserDatabaseSize();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseService/GetUserDatabaseSize", ReplyAction="http://tempuri.org/IDatabaseService/GetUserDatabaseSizeResponse")]
        System.Threading.Tasks.Task<int> GetUserDatabaseSizeAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseService/GetUser", ReplyAction="http://tempuri.org/IDatabaseService/GetUserResponse")]
        WcfClient.WcfService.User GetUser(int ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseService/GetUser", ReplyAction="http://tempuri.org/IDatabaseService/GetUserResponse")]
        System.Threading.Tasks.Task<WcfClient.WcfService.User> GetUserAsync(int ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseService/AddUser", ReplyAction="http://tempuri.org/IDatabaseService/AddUserResponse")]
        WcfClient.WcfService.User AddUser(WcfClient.WcfService.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseService/AddUser", ReplyAction="http://tempuri.org/IDatabaseService/AddUserResponse")]
        System.Threading.Tasks.Task<WcfClient.WcfService.User> AddUserAsync(WcfClient.WcfService.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseService/UpdateUser", ReplyAction="http://tempuri.org/IDatabaseService/UpdateUserResponse")]
        WcfClient.WcfService.User UpdateUser(WcfClient.WcfService.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseService/UpdateUser", ReplyAction="http://tempuri.org/IDatabaseService/UpdateUserResponse")]
        System.Threading.Tasks.Task<WcfClient.WcfService.User> UpdateUserAsync(WcfClient.WcfService.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseService/DeleteUser", ReplyAction="http://tempuri.org/IDatabaseService/DeleteUserResponse")]
        WcfClient.WcfService.User DeleteUser(int ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseService/DeleteUser", ReplyAction="http://tempuri.org/IDatabaseService/DeleteUserResponse")]
        System.Threading.Tasks.Task<WcfClient.WcfService.User> DeleteUserAsync(int ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseService/SortBy", ReplyAction="http://tempuri.org/IDatabaseService/SortByResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ArrayList))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(WcfClient.WcfService.User))]
        System.Collections.ArrayList SortBy(string property);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseService/SortBy", ReplyAction="http://tempuri.org/IDatabaseService/SortByResponse")]
        System.Threading.Tasks.Task<System.Collections.ArrayList> SortByAsync(string property);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IDatabaseServiceChannel : WcfClient.WcfService.IDatabaseService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DatabaseServiceClient : System.ServiceModel.ClientBase<WcfClient.WcfService.IDatabaseService>, WcfClient.WcfService.IDatabaseService {
        
        public DatabaseServiceClient() {
        }
        
        public DatabaseServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public DatabaseServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DatabaseServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DatabaseServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Collections.ArrayList GetAllUsers() {
            return base.Channel.GetAllUsers();
        }
        
        public System.Threading.Tasks.Task<System.Collections.ArrayList> GetAllUsersAsync() {
            return base.Channel.GetAllUsersAsync();
        }
        
        public int GetUserDatabaseSize() {
            return base.Channel.GetUserDatabaseSize();
        }
        
        public System.Threading.Tasks.Task<int> GetUserDatabaseSizeAsync() {
            return base.Channel.GetUserDatabaseSizeAsync();
        }
        
        public WcfClient.WcfService.User GetUser(int ID) {
            return base.Channel.GetUser(ID);
        }
        
        public System.Threading.Tasks.Task<WcfClient.WcfService.User> GetUserAsync(int ID) {
            return base.Channel.GetUserAsync(ID);
        }
        
        public WcfClient.WcfService.User AddUser(WcfClient.WcfService.User user) {
            return base.Channel.AddUser(user);
        }
        
        public System.Threading.Tasks.Task<WcfClient.WcfService.User> AddUserAsync(WcfClient.WcfService.User user) {
            return base.Channel.AddUserAsync(user);
        }
        
        public WcfClient.WcfService.User UpdateUser(WcfClient.WcfService.User user) {
            return base.Channel.UpdateUser(user);
        }
        
        public System.Threading.Tasks.Task<WcfClient.WcfService.User> UpdateUserAsync(WcfClient.WcfService.User user) {
            return base.Channel.UpdateUserAsync(user);
        }
        
        public WcfClient.WcfService.User DeleteUser(int ID) {
            return base.Channel.DeleteUser(ID);
        }
        
        public System.Threading.Tasks.Task<WcfClient.WcfService.User> DeleteUserAsync(int ID) {
            return base.Channel.DeleteUserAsync(ID);
        }
        
        public System.Collections.ArrayList SortBy(string property) {
            return base.Channel.SortBy(property);
        }
        
        public System.Threading.Tasks.Task<System.Collections.ArrayList> SortByAsync(string property) {
            return base.Channel.SortByAsync(property);
        }
    }
}
